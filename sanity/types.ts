/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type FullWidthImageSection = {
  _type: "fullWidthImageSection";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  alt?: string;
  caption?: string;
  height?: "small" | "medium" | "large" | "viewport";
  overlay?: {
    enabled?: boolean;
    opacity?: number;
    color?: "black" | "white" | "gray-900" | "brand";
  };
};

export type ImageGallerySection = {
  _type: "imageGallerySection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  layout?: "grid" | "masonry" | "carousel";
};

export type RichTextSection = {
  _type: "richTextSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          blank?: boolean;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
  >;
};

export type ContactFormSection = {
  _type: "contactFormSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  subheading?: string;
  formId?: string;
  submitButtonText?: string;
};

export type CtaSection = {
  _type: "ctaSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  subheading?: string;
  ctaButton?: Cta;
  secondaryCtaButton?: Cta;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type VideoEmbedSection = {
  _type: "videoEmbedSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  videoUrl?: string;
  caption?: string;
  placeholderImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type TestimonialItem = {
  _type: "testimonialItem";
  quote?: string;
  authorName?: string;
  authorTitleOrCompany?: string;
  authorImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  rating?: 1 | 2 | 3 | 4 | 5;
};

export type TestimonialSection = {
  _type: "testimonialSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  testimonials?: Array<
    {
      _key: string;
    } & TestimonialItem
  >;
};

export type StepSection = {
  _type: "stepSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  steps?: Array<{
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    title?: string;
    description?: string;
    _type: "stepItem";
    _key: string;
  }>;
};

export type FeatureItem = {
  _type: "featureItem";
  icon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title?: string;
  description?: string;
  link?: string;
};

export type FeatureListSection = {
  _type: "featureListSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  subheading?: string;
  features?: Array<
    {
      _key: string;
    } & FeatureItem
  >;
  layout?: "grid" | "list";
};

export type TextWithImageSection = {
  _type: "textWithImageSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  subheading?: string;
  textContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  imagePosition?: "left" | "right";
  ctaButton?: Cta;
};

export type HeroSection = {
  _type: "heroSection";
  heading?: string;
  headingTag?: "h1" | "h2" | "h3" | "h4";
  subheading?: string;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  ctaButton?: Cta;
  overlayImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Cta = {
  _type: "cta";
  buttonText?: string;
  linkType?: "internal" | "external" | "file";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landingPage";
  };
  externalUrl?: string;
  fileLink?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    _type: "file";
  };
  buttonStyle?: "primary" | "secondary" | "outline";
};

export type LandingPage = {
  _id: string;
  _type: "landingPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  seoTitle?: string;
  seoDescription?: string;
  navigationText?: string;
  includeInTopNavigation?: boolean;
  includeInFooterNavigation?: boolean;
  pageBuilder?: Array<
    | ({
        _key: string;
      } & HeroSection)
    | ({
        _key: string;
      } & TextWithImageSection)
    | ({
        _key: string;
      } & FeatureListSection)
    | ({
        _key: string;
      } & StepSection)
    | ({
        _key: string;
      } & TestimonialSection)
    | ({
        _key: string;
      } & VideoEmbedSection)
    | ({
        _key: string;
      } & CtaSection)
    | ({
        _key: string;
      } & ContactFormSection)
    | ({
        _key: string;
      } & RichTextSection)
    | ({
        _key: string;
      } & ImageGallerySection)
    | ({
        _key: string;
      } & FullWidthImageSection)
  >;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geysers = {
  _id: string;
  _type: "geysers";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  description?: string;
  composition?: string;
  outlets?: string;
  geyser?: {
    description?: string;
    price?: number;
  };
  installation?: {
    description?: string;
    price?: number;
  };
  certificateOfCompliance?: {
    description?: string;
    price?: number;
  };
  plumbing?: {
    description?: string;
    price?: number;
  };
  warranty?: string;
  specifications?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  maxFlowRate?: string;
  minFlowRate?: string;
  minWaterPressure?: string;
  maxWaterPressure?: string;
  dimensions?: string;
  brand?: string;
  price?: number;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type Article = {
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  meta_title?: string;
  meta_description?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  link?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | FullWidthImageSection
  | ImageGallerySection
  | RichTextSection
  | ContactFormSection
  | CtaSection
  | VideoEmbedSection
  | TestimonialItem
  | TestimonialSection
  | StepSection
  | FeatureItem
  | FeatureListSection
  | TextWithImageSection
  | HeroSection
  | Cta
  | LandingPage
  | SanityFileAsset
  | Geysers
  | Article
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: sanity/sanity-utils.ts
// Variable: ARTICLES_QUERY
// Query: *[_type == "article"] | order(_createdAt desc){      _id,      _createdAt,      title,      meta_title,      meta_description,      "slug": slug.current,      "image": image.asset->url,      link,      content    }
export type ARTICLES_QUERYResult = Array<{
  _id: string;
  _createdAt: string;
  title: string | null;
  meta_title: string | null;
  meta_description: string | null;
  slug: string | null;
  image: string | null;
  link: string | null;
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
}>;
// Variable: ARTICLE_QUERY
// Query: *[_type == "article" && slug.current == $slug][0]{      _id,      _createdAt,      title,      meta_title,      meta_description,      "slug": slug.current,      "image": image.asset->url,      link,      content    }
export type ARTICLE_QUERYResult = {
  _id: string;
  _createdAt: string;
  title: string | null;
  meta_title: string | null;
  meta_description: string | null;
  slug: string | null;
  image: string | null;
  link: string | null;
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
} | null;
// Variable: GEYSERS_QUERY
// Query: *[_type == "geysers"] | order(_createdAt asc){      _id,      _createdAt,      title,      "slug": slug.current,      subTitle,      description,      outlets,     geyser,     plumbing,     price,     composition,     certificateOfCompliance,     installation,      warranty,      specifications,      maxFlowRate,      minFlowRate,      minWaterPressure,      maxWaterPressure,      dimensions,      brand,      "image": image.asset->url,    }
export type GEYSERS_QUERYResult = Array<{
  _id: string;
  _createdAt: string;
  title: string | null;
  slug: string | null;
  subTitle: null;
  description: string | null;
  outlets: string | null;
  geyser: {
    description?: string;
    price?: number;
  } | null;
  plumbing: {
    description?: string;
    price?: number;
  } | null;
  price: number | null;
  composition: string | null;
  certificateOfCompliance: {
    description?: string;
    price?: number;
  } | null;
  installation: {
    description?: string;
    price?: number;
  } | null;
  warranty: string | null;
  specifications: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  maxFlowRate: string | null;
  minFlowRate: string | null;
  minWaterPressure: string | null;
  maxWaterPressure: string | null;
  dimensions: string | null;
  brand: string | null;
  image: string | null;
}>;
// Variable: GEYSER_QUERY
// Query: *[_type == "geysers" && slug.current == $slug][0]{     _id,      _createdAt,      title,      "slug": slug.current,      price,      subTitle,      composition,      description,      outlets,      geyser,     plumbing,     certificateOfCompliance,     installation,      warranty,      specifications,      maxFlowRate,      minFlowRate,      minWaterPressure,      maxWaterPressure,      dimensions,      brand,      "image": image.asset->url,    }
export type GEYSER_QUERYResult = {
  _id: string;
  _createdAt: string;
  title: string | null;
  slug: string | null;
  price: number | null;
  subTitle: null;
  composition: string | null;
  description: string | null;
  outlets: string | null;
  geyser: {
    description?: string;
    price?: number;
  } | null;
  plumbing: {
    description?: string;
    price?: number;
  } | null;
  certificateOfCompliance: {
    description?: string;
    price?: number;
  } | null;
  installation: {
    description?: string;
    price?: number;
  } | null;
  warranty: string | null;
  specifications: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  maxFlowRate: string | null;
  minFlowRate: string | null;
  minWaterPressure: string | null;
  maxWaterPressure: string | null;
  dimensions: string | null;
  brand: string | null;
  image: string | null;
} | null;
// Variable: LANDING_PAGES_QUERY
// Query: *[_type == "landingPage"] | order(_createdAt desc){    _id,    _createdAt,    title,    "slug": slug.current,    seoTitle,    seoDescription,    navigationText,    includeInTopNavigation,    includeInFooterNavigation,    pageBuilder[]{      _type,      _type == "heroSection" => {        heading,        headingTag,        subheading,        "backgroundImage": backgroundImage.asset->url,        "overlayImage": overlayImage.asset->url,        ctaButton,      },      _type == "textWithImageSection" => {        heading,        headingTag,        textContent,        subheading,        "image": image.asset->url,        imagePosition,        ctaButton      },      _type == "featureListSection" => {        heading,        headingTag,        subheading,        features[]{          "icon": icon.asset->url,          title,          description,          link        },        layout      },      _type == "stepSection" => {        heading,        headingTag,        steps[]{          "icon": icon.asset->url,          title,          description        }      },      _type == "testimonialSection" => {        heading,        headingTag,        testimonials[]{          quote,          authorName,          authorTitleOrCompany,          "authorImage": authorImage.asset->url,          rating        }      },      _type == "videoEmbedSection" => {        heading,        headingTag,        videoUrl,        caption,        "placeholderImage": placeholderImage.asset->url      },      _type == "ctaSection" => {        heading,        headingTag,        subheading,        ctaButton,        secondaryCtaButton,        "backgroundImage": backgroundImage.asset->url      },      _type == "contactFormSection" => {        heading,        headingTag,        subheading,        formId,        submitButtonText      },      _type == "richTextSection" => {        heading,        headingTag,        content      },      _type == "imageGallerySection" => {        heading,        headingTag,        images[]{          "url": asset->url,          caption,          alt        },        layout      },      _type == "fullWidthImageSection" => {        "image": image.asset->url,        alt,        caption,        height,        overlay      }    }  }
export type LANDING_PAGES_QUERYResult = Array<{
  _id: string;
  _createdAt: string;
  title: string | null;
  slug: string | null;
  seoTitle: string | null;
  seoDescription: string | null;
  navigationText: string | null;
  includeInTopNavigation: boolean | null;
  includeInFooterNavigation: boolean | null;
  pageBuilder: Array<
    | {
        _type: "contactFormSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        subheading: string | null;
        formId: string | null;
        submitButtonText: string | null;
      }
    | {
        _type: "ctaSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        subheading: string | null;
        ctaButton: Cta | null;
        secondaryCtaButton: Cta | null;
        backgroundImage: string | null;
      }
    | {
        _type: "featureListSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        subheading: string | null;
        features: Array<{
          icon: string | null;
          title: string | null;
          description: string | null;
          link: string | null;
        }> | null;
        layout: "grid" | "list" | null;
      }
    | {
        _type: "fullWidthImageSection";
        image: string | null;
        alt: string | null;
        caption: string | null;
        height: "large" | "medium" | "small" | "viewport" | null;
        overlay: {
          enabled?: boolean;
          opacity?: number;
          color?: "black" | "brand" | "gray-900" | "white";
        } | null;
      }
    | {
        _type: "heroSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        subheading: string | null;
        backgroundImage: string | null;
        overlayImage: string | null;
        ctaButton: Cta | null;
      }
    | {
        _type: "imageGallerySection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        images: Array<{
          url: string | null;
          caption: string | null;
          alt: string | null;
        }> | null;
        layout: "carousel" | "grid" | "masonry" | null;
      }
    | {
        _type: "richTextSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        content: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                blank?: boolean;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              _key: string;
            }
        > | null;
      }
    | {
        _type: "stepSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        steps: Array<{
          icon: string | null;
          title: string | null;
          description: string | null;
        }> | null;
      }
    | {
        _type: "testimonialSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        testimonials: Array<{
          quote: string | null;
          authorName: string | null;
          authorTitleOrCompany: string | null;
          authorImage: string | null;
          rating: 1 | 2 | 3 | 4 | 5 | null;
        }> | null;
      }
    | {
        _type: "textWithImageSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        textContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        subheading: string | null;
        image: string | null;
        imagePosition: "left" | "right" | null;
        ctaButton: Cta | null;
      }
    | {
        _type: "videoEmbedSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        videoUrl: string | null;
        caption: string | null;
        placeholderImage: string | null;
      }
  > | null;
}>;
// Variable: LANDING_PAGE_QUERY
// Query: *[_type == "landingPage" && slug.current == $slug][0]{    _id,    _createdAt,    title,    "slug": slug.current,    seoTitle,    seoDescription,    navigationText,    includeInTopNavigation,    includeInFooterNavigation,    pageBuilder[]{      _type,      _type == "heroSection" => {        heading,        headingTag,        subheading,        "backgroundImage": backgroundImage.asset->url,        "overlayImage": overlayImage.asset->url,        ctaButton      },      _type == "textWithImageSection" => {        heading,        headingTag,        textContent,        "image": image.asset->url,        imagePosition,        ctaButton      },      _type == "featureListSection" => {        heading,        headingTag,        subheading,        features[]{          "icon": icon.asset->url,          title,          description,          link        },        layout      },      _type == "stepSection" => {        heading,        headingTag,        steps[]{          "icon": icon.asset->url,          title,          description        }      },      _type == "testimonialSection" => {        heading,        headingTag,        testimonials[]{          quote,          authorName,          authorTitleOrCompany,          "authorImage": authorImage.asset->url,          rating        }      },      _type == "videoEmbedSection" => {        heading,        headingTag,        videoUrl,        caption,        "placeholderImage": placeholderImage.asset->url      },      _type == "ctaSection" => {        heading,        headingTag,        subheading,        ctaButton,        secondaryCtaButton,        "backgroundImage": backgroundImage.asset->url      },      _type == "contactFormSection" => {        heading,        headingTag,        subheading,        formId,        submitButtonText      },      _type == "richTextSection" => {        heading,        headingTag,        content      },      _type == "imageGallerySection" => {        heading,        headingTag,        images[]{          "url": asset->url,          caption,          alt        },        layout      },      _type == "fullWidthImageSection" => {        "image": image.asset->url,        alt,        caption,        height,        overlay      }    }  }
export type LANDING_PAGE_QUERYResult = {
  _id: string;
  _createdAt: string;
  title: string | null;
  slug: string | null;
  seoTitle: string | null;
  seoDescription: string | null;
  navigationText: string | null;
  includeInTopNavigation: boolean | null;
  includeInFooterNavigation: boolean | null;
  pageBuilder: Array<
    | {
        _type: "contactFormSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        subheading: string | null;
        formId: string | null;
        submitButtonText: string | null;
      }
    | {
        _type: "ctaSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        subheading: string | null;
        ctaButton: Cta | null;
        secondaryCtaButton: Cta | null;
        backgroundImage: string | null;
      }
    | {
        _type: "featureListSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        subheading: string | null;
        features: Array<{
          icon: string | null;
          title: string | null;
          description: string | null;
          link: string | null;
        }> | null;
        layout: "grid" | "list" | null;
      }
    | {
        _type: "fullWidthImageSection";
        image: string | null;
        alt: string | null;
        caption: string | null;
        height: "large" | "medium" | "small" | "viewport" | null;
        overlay: {
          enabled?: boolean;
          opacity?: number;
          color?: "black" | "brand" | "gray-900" | "white";
        } | null;
      }
    | {
        _type: "heroSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        subheading: string | null;
        backgroundImage: string | null;
        overlayImage: string | null;
        ctaButton: Cta | null;
      }
    | {
        _type: "imageGallerySection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        images: Array<{
          url: string | null;
          caption: string | null;
          alt: string | null;
        }> | null;
        layout: "carousel" | "grid" | "masonry" | null;
      }
    | {
        _type: "richTextSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        content: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                blank?: boolean;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              _key: string;
            }
        > | null;
      }
    | {
        _type: "stepSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        steps: Array<{
          icon: string | null;
          title: string | null;
          description: string | null;
        }> | null;
      }
    | {
        _type: "testimonialSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        testimonials: Array<{
          quote: string | null;
          authorName: string | null;
          authorTitleOrCompany: string | null;
          authorImage: string | null;
          rating: 1 | 2 | 3 | 4 | 5 | null;
        }> | null;
      }
    | {
        _type: "textWithImageSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        textContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        image: string | null;
        imagePosition: "left" | "right" | null;
        ctaButton: Cta | null;
      }
    | {
        _type: "videoEmbedSection";
        heading: string | null;
        headingTag: "h1" | "h2" | "h3" | "h4" | null;
        videoUrl: string | null;
        caption: string | null;
        placeholderImage: string | null;
      }
  > | null;
} | null;
// Variable: TOP_NAVIGATION_QUERY
// Query: *[_type == "landingPage" && includeInTopNavigation == true] {    title,    slug,    navigationText  }
export type TOP_NAVIGATION_QUERYResult = Array<{
  title: string | null;
  slug: Slug | null;
  navigationText: string | null;
}>;
// Variable: FOOTER_NAVIGATION_QUERY
// Query: *[_type == "landingPage" && includeInFooterNavigation == true] {    title,    slug,    navigationText  }
export type FOOTER_NAVIGATION_QUERYResult = Array<{
  title: string | null;
  slug: Slug | null;
  navigationText: string | null;
}>;

// Query TypeMap
import "next-sanity";
declare module "next-sanity" {
  interface SanityQueries {
    '*[_type == "article"] | order(_createdAt desc){\n      _id,\n      _createdAt,\n      title,\n      meta_title,\n      meta_description,\n      "slug": slug.current,\n      "image": image.asset->url,\n      link,\n      content\n    }': ARTICLES_QUERYResult;
    '*[_type == "article" && slug.current == $slug][0]{\n      _id,\n      _createdAt,\n      title,\n      meta_title,\n      meta_description,\n      "slug": slug.current,\n      "image": image.asset->url,\n      link,\n      content\n    }': ARTICLE_QUERYResult;
    '*[_type == "geysers"] | order(_createdAt asc){\n      _id,\n      _createdAt,\n      title,\n      "slug": slug.current,\n      subTitle,\n      description,\n      outlets,\n     geyser,\n     plumbing,\n     price,\n     composition,\n     certificateOfCompliance,\n     installation,\n      warranty,\n      specifications,\n      maxFlowRate,\n      minFlowRate,\n      minWaterPressure,\n      maxWaterPressure,\n      dimensions,\n      brand,\n      "image": image.asset->url,\n    }': GEYSERS_QUERYResult;
    '*[_type == "geysers" && slug.current == $slug][0]{\n     _id,\n      _createdAt,\n      title,\n      "slug": slug.current,\n      price,\n      subTitle,\n      composition,\n      description,\n      outlets,\n      geyser,\n     plumbing,\n     certificateOfCompliance,\n     installation,\n      warranty,\n      specifications,\n      maxFlowRate,\n      minFlowRate,\n      minWaterPressure,\n      maxWaterPressure,\n      dimensions,\n      brand,\n      "image": image.asset->url,\n    }': GEYSER_QUERYResult;
    '*[_type == "landingPage"] | order(_createdAt desc){\n    _id,\n    _createdAt,\n    title,\n    "slug": slug.current,\n    seoTitle,\n    seoDescription,\n    navigationText,\n    includeInTopNavigation,\n    includeInFooterNavigation,\n    pageBuilder[]{\n      _type,\n      _type == "heroSection" => {\n        heading,\n        headingTag,\n        subheading,\n        "backgroundImage": backgroundImage.asset->url,\n        "overlayImage": overlayImage.asset->url,\n        ctaButton,\n      },\n      _type == "textWithImageSection" => {\n        heading,\n        headingTag,\n        textContent,\n        subheading,\n        "image": image.asset->url,\n        imagePosition,\n        ctaButton\n      },\n      _type == "featureListSection" => {\n        heading,\n        headingTag,\n        subheading,\n        features[]{\n          "icon": icon.asset->url,\n          title,\n          description,\n          link\n        },\n        layout\n      },\n      _type == "stepSection" => {\n        heading,\n        headingTag,\n        steps[]{\n          "icon": icon.asset->url,\n          title,\n          description\n        }\n      },\n      _type == "testimonialSection" => {\n        heading,\n        headingTag,\n        testimonials[]{\n          quote,\n          authorName,\n          authorTitleOrCompany,\n          "authorImage": authorImage.asset->url,\n          rating\n        }\n      },\n      _type == "videoEmbedSection" => {\n        heading,\n        headingTag,\n        videoUrl,\n        caption,\n        "placeholderImage": placeholderImage.asset->url\n      },\n      _type == "ctaSection" => {\n        heading,\n        headingTag,\n        subheading,\n        ctaButton,\n        secondaryCtaButton,\n        "backgroundImage": backgroundImage.asset->url\n      },\n      _type == "contactFormSection" => {\n        heading,\n        headingTag,\n        subheading,\n        formId,\n        submitButtonText\n      },\n      _type == "richTextSection" => {\n        heading,\n        headingTag,\n        content\n      },      _type == "imageGallerySection" => {\n        heading,\n        headingTag,\n        images[]{\n          "url": asset->url,\n          caption,\n          alt\n        },\n        layout\n      },\n      _type == "fullWidthImageSection" => {\n        "image": image.asset->url,\n        alt,\n        caption,\n        height,\n        overlay\n      }\n    }\n  }': LANDING_PAGES_QUERYResult;
    '*[_type == "landingPage" && slug.current == $slug][0]{\n    _id,\n    _createdAt,\n    title,\n    "slug": slug.current,\n    seoTitle,\n    seoDescription,\n    navigationText,\n    includeInTopNavigation,\n    includeInFooterNavigation,\n    pageBuilder[]{\n      _type,\n      _type == "heroSection" => {\n        heading,\n        headingTag,\n        subheading,\n        "backgroundImage": backgroundImage.asset->url,\n        "overlayImage": overlayImage.asset->url,\n        ctaButton\n      },\n      _type == "textWithImageSection" => {\n        heading,\n        headingTag,\n        textContent,\n        "image": image.asset->url,\n        imagePosition,\n        ctaButton\n      },\n      _type == "featureListSection" => {\n        heading,\n        headingTag,\n        subheading,\n        features[]{\n          "icon": icon.asset->url,\n          title,\n          description,\n          link\n        },\n        layout\n      },\n      _type == "stepSection" => {\n        heading,\n        headingTag,        steps[]{\n          "icon": icon.asset->url,\n          title,\n          description\n        }\n      },\n      _type == "testimonialSection" => {\n        heading,\n        headingTag,\n        testimonials[]{\n          quote,\n          authorName,\n          authorTitleOrCompany,\n          "authorImage": authorImage.asset->url,\n          rating\n        }\n      },\n      _type == "videoEmbedSection" => {\n        heading,\n        headingTag,\n        videoUrl,\n        caption,\n        "placeholderImage": placeholderImage.asset->url\n      },\n      _type == "ctaSection" => {\n        heading,\n        headingTag,\n        subheading,\n        ctaButton,\n        secondaryCtaButton,\n        "backgroundImage": backgroundImage.asset->url\n      },\n      _type == "contactFormSection" => {\n        heading,\n        headingTag,\n        subheading,\n        formId,\n        submitButtonText\n      },\n      _type == "richTextSection" => {\n        heading,\n        headingTag,\n        content\n      },      _type == "imageGallerySection" => {\n        heading,\n        headingTag,\n        images[]{\n          "url": asset->url,\n          caption,\n          alt\n        },\n        layout\n      },\n      _type == "fullWidthImageSection" => {\n        "image": image.asset->url,\n        alt,\n        caption,\n        height,\n        overlay\n      }\n    }\n  }': LANDING_PAGE_QUERYResult;
    '*[_type == "landingPage" && includeInTopNavigation == true] {\n    title,\n    slug,\n    navigationText\n  }': TOP_NAVIGATION_QUERYResult;
    '*[_type == "landingPage" && includeInFooterNavigation == true] {\n    title,\n    slug,\n    navigationText\n  }': FOOTER_NAVIGATION_QUERYResult;
  }
}
